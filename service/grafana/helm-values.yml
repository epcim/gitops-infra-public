tolerations:
- key: "arm"
  operator: "Exists"

deploymentStrategy:
  type: Recreate

podAnnotations:
  #backup.velero.io/backup-volumes: storage
  configmap.reloader.stakater.com/reload: "grafana"

persistence:
  enabled: true
  storageClassName: "longhorn"
  size: 10Gi
  accessModes:
  - ReadWriteOnce

env:
  GF_ANALYTICS_CHECK_FOR_UPDATES: false
  GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
  GF_EXPLORE_ENABLED: true
  GF_GRAFANA_NET_URL: https://grafana.net
  GF_LOG_FILTERS: rendering:debug
  GF_LOG_MODE: console
  GF_PANELS_DISABLE_SANITIZE_HTML: true
  GF_SECURITY_ALLOW_EMBEDDING: true
  GF_SERVER_ROOT_URL: https://grafana.apealive.net
  #GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: "natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel"
  #VAR_BLOCKY_URL: "http://blocky.default.svc.cluster.local:4000"
# envFromSecrets:
#   - name: grafana-auth0-secret

plugins:
- pr0ps-trackmap-panel
- natel-plotly-panel
- grafana-clock-panel
- vonage-status-panel
- grafana-piechart-panel
- https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
- grafana-clock-panel
- grafana-worldmap-panel
- natel-discrete-panel

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    hajimari.io/enable: "true"
    traefik.frontend.rule.type: PathPrefix
  

  hosts: [grafana.apealive.net]
  #tls:
  #- hosts:
  #  - grafana.apealive.net


serviceMonitor:
  enabled: true
serviceAccount:
  autoMount: true
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards/default
dashboards:
  default:
    1-node-exporter:
      url: https://grafana.com/api/dashboards/11074/revisions/9/download
      datasource: Prometheus
    #blocky:
    #  url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.18/docs/blocky-grafana.json
    #  datasource: Prometheus
    # Ref: https://grafana.com/grafana/dashboards/2842
    #flux-cluster:
    #  url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
    #  datasource: Prometheus
    #flux-control-plane:
    #  url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
    #  datasource: Prometheus
    #frigate:
    #  url: https://raw.githubusercontent.com/epcim/gitops-infra/master/monitoring/grafana/dashboards/frigate.json
    #  datasource: Prometheus
    #home-assistant:
    #  #FIXME url: https://raw.githubusercontent.com/epcim/gitops-infra/master/monitoring/grafana/dashboards/home_assistant.json
    #  url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
    #  datasource: home_assistant
    loki:
      gnetId: 13407
      revision: 1
      datasource: Prometheus
    #minio-overview:
    #  url: https://raw.githubusercontent.com/epcim/gitops-infra/master/monitoring/grafana/dashboards/minio_overview.json
    #  datasource: Prometheus
    #nginx-dashboard:
    #  url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
    #  datasource: Prometheus
    node-exporter-full:
      gnetId: 1860
      revision: 23
      datasource: Prometheus
    prometheus-exporter-summary:
      #FIXME url: https://raw.githubusercontent.com/epcim/gitops-infra/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
      url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
      datasource: Prometheus
    #speedtest-exporter:
    #  url: https://raw.githubusercontent.com/epcim/gitops-infra/master/monitoring/grafana/dashboards/speedtest-exporter.json
    #  datasource: Prometheus
    #TrueNAS:
    #  url: https://grafana.com/api/dashboards/12921/revisions/1/download
    #  datasource: TrueNAS
    # Ref: https://grafana.com/grafana/dashboards/11315
    unifi-client-insights:
      gnetId: 11315
      revision: 8
      datasource: Prometheus
    # Ref: https://grafana.com/grafana/dashboards/11311
    unifi-network-sites:
      gnetId: 11311
      revision: 4
      datasource: Prometheus
    # Ref: https://grafana.com/grafana/dashboards/11314
    unifi-uap-insights:
      gnetId: 11314
      revision: 9
      datasource: Prometheus
    # Ref: https://grafana.com/grafana/dashboards/11312
    unifi-usw-insights:
      gnetId: 11312
      revision: 8
      datasource: Prometheus
    #ups:
    #  url: https://raw.githubusercontent.com/epcim/gitops-infra/master/monitoring/grafana/dashboards/ups.json
    #  datasource: Prometheus
    #uptimerobot:
    #  url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
    #  datasource: Prometheus
    #velero:
    #  url: https://grafana.com/api/dashboards/11055/revisions/2/download
    #  datasource: Prometheus
    #windows-node:
    #  url: https://raw.githubusercontent.com/epcim/gitops-infra/master/monitoring/grafana/dashboards/windows_node.json
    #  datasource: Prometheus
    falco:
      url: https://github.com/falcosecurity/falco-exporter/raw/master/grafana/dashboard.json
      datasource: Prometheus
    loki-dashboard-quick-search:
      gnetId: 12019
      revision: 2
      datasource:
      - name: Prometheus
      - name: Loki
    prometheus-exporter-summary:
      url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
      datasource: Prometheus
    speedtest-exporter:
      url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/speedtest-exporter.json
      datasource: Prometheus
    ups:
      url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/ups.json
      datasource: Prometheus
sidecar:
  datasources:
    enabled: true
    searchNamespace: ALL
    # defaultDatasourceEnabled: false
  dashboards:
    enabled: true
    searchNamespace: ALL
datasources:
  datasources.yaml:
    apiVersion: 1
    # list of datasources that should be deleted from the database
    deleteDatasources:
      - name: Loki
        orgId: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://thanos-query.mon.svc.cluster.local:9090/
      isDefault: true
    - name: Loki
      type: loki
      access: proxy
      url: http://loki.log.svc.cluster.local:3100
    #- name: influxdb
    #  type: influxdb
    #  access: proxy
    #  url: http://influxdb:8086
    #  database: telegraf
    - name: home_assistant
      type: influxdb
      access: proxy
      url: http://influxdb:8086
      database: home_assistant
    #- name: speedtests
    #  type: influxdb
    #  access: proxy
    #  url: http://influxdb:8086
    #  database: speedtests
    #- name: uptimerobot
    #  type: influxdb
    #  access: proxy
    #  url: http://influxdb:8086
    #  database: uptimerobot
    #- name: TrueNAS
    #  type: influxdb
    #  access: proxy
    #  url: http://influxdb:8086
    #  database: graphitedb
grafana.ini:
  server:
    root_url: https://grafana.apealive.net
  # security:
  #   admin_user: admin@apealive.net
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: false
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  auth.basic:
    #enabled: false
    disable_login_form: true
  auth.anonymous:
     enabled: true
  #auth:
  #  disable_login_form: true
  auth.generic_oauth:
        # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/generic-oauth/#role-mapping
        enabled: true
        #allow_assign_grafana_admin: true
        allow_sign_up: true
        team_ids:
        #allowed_organizations: apealive
        #allowed_domains: apealive.net
        name: Auth0
        client_id: {{ secrets.grafana.auth0.client_id }}
        client_secret: {{ secrets.grafana.auth0.client_secret }}
        scopes: openid profile email
        auth_url: https://apealive.eu.auth0.com/authorize
        token_url: https://apealive.eu.auth0.com/oauth/token
        api_url: https://apealive.eu.auth0.com/userinfo
        #use_pkce: true
        # https://blog.dahanne.net/2020/04/15/integrating-auth0-oidc-oauth-2-with-authorization-groups-and-roles/
        # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/generic-oauth/#role-mapping
        role_attribute_path: contains("https://apealive.net/groups"[*], 'Admin') && 'Admin' || contains("https://apealive.net/groups"[*], 'Editor') && 'Editor' || 'Viewer'

admin:
  existingSecret: grafana

# extraSecretMounts:
# - extraSecretMounts:
#   - name: auth-generic-oauth-secret-mount
#     secretName: auth-generic-oauth-secret
#     defaultMode: 0440
#     mountPath: /etc/secrets/auth_generic_oauth
#     readOnly: true

# vim: ft=yaml syntax=yaml sts=2 ts=2 sw=2
